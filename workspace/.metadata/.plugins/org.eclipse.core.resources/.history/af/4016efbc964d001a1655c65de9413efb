package kr.or.ddit.member;

import java.net.URL;
import java.util.ResourceBundle;

import javafx.fxml.Initializable;
import javafx.fxml.FXML;
import javafx.scene.Node;
import javafx.scene.control.Button;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.control.TableColumn;
import javafx.scene.control.Pagination;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.scene.input.MouseEvent;
import javafx.util.Callback;
import kr.or.ddit.member.vo.MemberVO;

public class MemberController implements Initializable{

	@FXML private Button addBtn;
	@FXML private Button editBtn;
	@FXML private Button delBtn;
	@FXML private TableView<MemberVO> tbView;
	@FXML private TableColumn<MemberVO,String> idCol;
	@FXML private TableColumn<MemberVO,String> nameCol;
	@FXML private TableColumn<MemberVO,String> telCol;
	@FXML private TableColumn<MemberVO,String> addrCol;
	@FXML private Pagination pagnation;

	// 페이지네이션 변수
	private int from, to, itemsForPage;
	
	// 정보 담을 그릇
	private ObservableList<MemberVO> allTableData, currentPageData;
	
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		
		idCol.setCellValueFactory(new PropertyValueFactory<MemberVO,String>("mem_id"));
		nameCol.setCellValueFactory(new PropertyValueFactory<MemberVO,String>("mem_name"));
		telCol.setCellValueFactory(new PropertyValueFactory<MemberVO,String>("mem_tel"));
		addrCol.setCellValueFactory(new PropertyValueFactory<MemberVO,String>("mem_addr"));
		
		// 전체 테이블 데이터 설정
		allTableData = FXCollections.observableArrayList();
		
		// 테이블뷰에 리스트 집어넣는다.
		tbView.setItems(allTableData);

		//데이터 넣기
		allTableData.add(new MemberVO("patiss1", "강현강현","2075-7087","대전대전대전"));
		
		itemsForPage = 5;
		int totPageCount = allTableData.size()%itemsForPage ==0 ?allTableData.size()/itemsForPage : allTableData.size()/itemsForPage +1;
		pagnation.setPageCount(totPageCount);
		
		pagnation.setPageFactory(new Callback<Integer, Node>() {
			
			@Override
			public Node call(Integer pageindex) {
				from = pageindex * itemsForPage;
				to = from + itemsForPage -1;
				tbView.setItems(getTableViewData(from, to));
				
				return tbView;
			}
		});
		
		
		
		
		
		
	}
	
	private ObservableList<MemberVO> getTableViewData(int from, int to){
		
		// 현재 페이지의 데이터 초기화
		currentPageData = FXCollections.observableArrayList();
		
		int totSize = allTableData.size();
		for(int i = from; i <= to && i < totSize; i ++) {
			currentPageData.add(allTableData.get(i));
		}
		
		return currentPageData;
	}
	

	@FXML public void addBtnClicked() {}

	@FXML public void editBtnClicked(ActionEvent event) {}

	@FXML public void delBtnClicked(ActionEvent event) {}

	@FXML public void tbSelected(MouseEvent event) {}

}
