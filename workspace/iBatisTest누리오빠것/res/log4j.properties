#\uac15\uc758\uc18c\uc2a4>config \uc5d0\uc11c \ubcf5\uc0ac\ud574\uc634!!(\uc774\uac83\ub9cc.xml\uc740 \uc548\uac00\uc838\uc654\uc74c.)
#property \ud2b9\uc9d5 : ( \uc88c\uce21 \ud0a4 = \uc6b0\uce21\ubca8\ub958 ) \ud615\uc2dd\uc784.
#appender : \ub85c\uae45\uc744 \ub0a8\uae38 \uc7a5\uc18c
#layout : \ub85c\uae45 \ud328\ud134(\ud615\uc2dd)
# log4j.properties
 
# \uae30\ubcf8 \ub85c\uae45\ub4f1\uae09\uc740 INFO , \uae30\ubcf8 appender\ub85c \ud45c\uc900\ucd9c\ub825\uacfc rolling \uc744 \uc0ac\uc6a9\ud568.
log4j.rootLogger=ERROR, stdout   
                
# Appender \uc885\ub958(ConsoleAppender, FileAppender, JDBCAppender, JMSAppender, SMTPAppender, SocketAppender, SyslogAppender \ub4f1)
# appender \uc774\ub984, , , \ud574\uc11c \uc5ec\ub7ec\uac1c \ucc0d\uc74c(\ub9ce\uc744\uacbd\uc6b0)
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
# The target may be a console, a file, or another item depending on the appender.
log4j.appender.stdout.Target=System.out
# Layout \uc885\ub958(DateLayout, HTMLLayout, PatternLayout, SimpleLayout, XMLLayout)
# \ud654\uba74\uc5d0 \ucd9c\ub825\ud558\ub294 \ud328\ud134!\uc544\ub798\uc5d0 \ud328\ud134\ub808\uc774\uc544\uc6c3\uc774\ub77c\ub294 \ud30c\uc77c \uc0ac\uc6a9\ud574\uc11c \ucd9c\ub825\ud560\uac70\uc57c.
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
# \ub85c\uae45\ub4f1\uae09 \ud074\ub798\uc2a4\uba85.\uba54\uc18c\ub4dc\uba85:\ub77c\uc778\uc218 - \uba54\uc2dc\uc9c0
# \uc5b4\ub5a4\uc2dd\uc73c\ub85c \ucc0d\uc744\uac83\uc778\uac00 \ubd80\ubd84? \ud654\uba74\uc5d0 \ub85c\uadf8\ub97c\ucc0d\uc744\ub54c \uc544\ub798\uc640\uac19\uc740 \ubaa8\uc591\uc73c\ub85c \ucc0d\uc744\uac83\uc774\ub2e4. 
log4j.appender.stdout.layout.ConversionPattern=%5p %C{1}.%M:%L - %m%n  

# \ub85c\uadf8\ucd9c\ub825\uc744 \uc5ec\ub7ec\uac1c\uc758 \ud30c\uc77c\ub85c \ub098\ub204\uc5b4 \ucc98\ub9ac\ud558\uae30
# \uc544\ub798 \ud30c\uc77c\uc5b4\ud39c\ub354\uc124\uc815\uc784. \uadfc\ub370 \ub9e8\uc704 \uae30\ubcf8\ub85c\uae45\ub4f1\uae09\uc740 INFO~~~\ud558\ub294\ubd80\ubd84\uc5d0 \ucd94\uac00\uc548\ud574\ub194\uc11c \uc2e4\uc81c\ub85c \uc2e4\ud589\ub418\ub294\ubd80\ubd84\uc740 \uc544\ub2d8.
log4j.appender.rolling=org.apache.log4j.DailyRollingFileAppender
log4j.appender.rolling.File=d:/D_Other/log4jLogFile.log
log4j.appender.rolling.Append=true
log4j.appender.rolling.DatePattern='.'yyyy-MM-dd
log4j.appender.rolling.layout=org.apache.log4j.PatternLayout
log4j.appender.rolling.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
# Set the immediate flush to true (default)
#log4j.appender.rolling.ImmediateFlush=true
# Set the threshold level(\uc784\uacc4\uac12) to debug mode
#log4j.appender.rolling.Threshold=debug

# Set the maximum file size before rollover
#log4j.appender.FILE.MaxFileSize=5KB

# Set the the backup index
#log4j.appender.FILE.MaxBackupIndex=2

# SqlMap logging configuration...
# \ud328\ud0a4\uc9c0 \uc790\uccb4\uc5d0 \ub85c\uae45\uc744 \uac78\uace0 \uc2f6\uc744\ub54c
#log4j.logger.[logger-name]=level, appender1,appender..n
#log4j.logger.java.sql.Connection=DEBUG, rolling
#log4j.logger.java.sql.Statement=DEBUG, rolling                       
#log4j.logger.java.sql.PreparedStatement=INFO, rolling
#log4j.logger.java.sql.ResultSet=DEBUG, rolling

# Logger Test
#log4j.logger.ibatis.member.MemberMain=DEBUG
